import streamlit as st
import sys
import warnings
import yaml
import os
import subprocess
import openai
import base64
from PIL import Image
import markdown
from markupsafe import Markup
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "src")))
from project_aiver2.crew import ProjectAiver2

from crewai.project import crew
from dotenv import load_dotenv
load_dotenv()
#!/usr/bin/env python
openai_api_key = os.getenv("GEMINI_API_KEY")


warnings.filterwarnings("ignore", category=SyntaxWarning, module="pysbd")
st.set_page_config(page_title="AI ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å", layout="wide")  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Wide Mode
def get_provinces(provinces):
    n_provinces = ""
    for i in range(len(provinces)):
        n_provinces = n_provinces +" "+ provinces[i]
    return n_provinces

def get_travel_styles(travel_styles):
    n_travel_styles = ""
    for i in range(len(travel_styles)):
        n_travel_styles = n_travel_styles + " "+ travel_styles[i]
    return n_travel_styles

# ‡πÉ‡∏™‡πà Banner ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ st.image()
image_path = os.path.join("images", "‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏Å.png")

# ‡πÅ‡∏™‡∏î‡∏á Banner
st.markdown(
    f"""
    <style>
    .banner-img {{
        display: block;
        margin: auto;
        width: 100%; 
        height: 400px;  
        object-fit: cover;
    }}
    </style>
    <img src="data:image/png;base64,{base64.b64encode(open(image_path, "rb").read()).decode()}" class="banner-img">
    """,
    unsafe_allow_html=True
)

st.markdown(
    """
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Prompt:wght@300;400;700&display=swap');

    html, body, [class*="st-"] {{
        font-family: 'Prompt', sans-serif;
    }}
    .hover-img {
        transition: transform 0.3s ease-in-out;
        margin: 5px;
        width:100%;
    }
    .hover-img:hover {
        transform: scale(1.1); /* ‡∏Ç‡∏¢‡∏≤‡∏¢ 1.1 ‡πÄ‡∏ó‡πà‡∏≤ */
    }
    h1,h2,h3,h4{{
        font-family: 'Prompt', sans-serif;
    }}
    </style>
    """,unsafe_allow_html=True)
st.write(
        f"""
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Prompt:wght@300;400;700&display=swap');

            html, body, [class*="st-"] {{
                font-family: 'Prompt', sans-serif;
            }}
            .header{{
                font-size : 24px;
                font-style : Bold;
            }}
              
        </style>
        
        """, unsafe_allow_html=True)
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
st.markdown("""<h2 style="text-align: center; font-family : 'Prompt', sans-serif;">‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô</h2>""", unsafe_allow_html=True)

# ‡∏û‡∏≤‡∏ò‡∏Ç‡∏≠‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
image_folder = "images"

# ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏û‡∏≤‡∏ò‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
provinces = {
    "‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ": os.path.join(image_folder, "‡∏Å‡∏≤‡∏ç.jpg"),
    "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå": os.path.join(image_folder, "‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö.jpg"),
    "‡∏ï‡∏≤‡∏Å": os.path.join(image_folder, "‡∏ï‡∏≤‡∏Å.jpg"),
    "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ": os.path.join(image_folder, "‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ.jpg"),
    "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ": os.path.join(image_folder, "‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ.jpg"),
}

# ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î (‡πÉ‡∏ä‡πâ checkbox ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
selected_provinces = []

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
st.markdown("""<h4 style="font-family : 'Prompt', sans-serif;">‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</h4>""", unsafe_allow_html=True)
cols_per_row = 5  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡πà‡∏≠‡πÅ‡∏ñ‡∏ß
cols = st.columns(cols_per_row)  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î

# ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ç‡∏¢‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏õ‡∏ß‡∏≤‡∏á

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏π‡∏õ‡πÄ‡∏õ‡πá‡∏ô base64
def image_to_base64(image_path):
    with open(image_path, "rb") as image_file:
        return base64.b64encode(image_file.read()).decode()

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å checkbox
for i, (province, image_path) in enumerate(provinces.items()):
    with cols[i % cols_per_row]:  # ‡∏ß‡∏ô‡∏ã‡πâ‡∏≥‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        # ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô base64
        encoded_image = image_to_base64(image_path)
        # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö hover effect
        st.markdown(
            f'<img src="data:image/jpg;base64,{encoded_image}" class="hover-img" width="150">',
            unsafe_allow_html=True
        )
        if st.checkbox(f"{province}", key=f"checkbox_{i}"):
            selected_provinces.append(province)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if selected_provinces:
    
    #‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
    st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)
    st.markdown("""<h6 style="font-family : 'Prompt', sans-serif;">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h6>""", unsafe_allow_html=True)
    st.write(", ".join(selected_provinces))
else:
    st.markdown("""<h6 style="font-family : 'Prompt', sans-serif;">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</h6>""", unsafe_allow_html=True)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)

# ‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô
st.markdown("""<h4 style="font-family : 'Prompt', sans-serif;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏õ</h4>""", unsafe_allow_html=True)
col1, col2 = st.columns(2)
with col1:
    days = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô:", min_value=1, step=1, value=1)
with col2:
    # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô
    nights = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏∑‡∏ô:", min_value=days-1, max_value=days, step=1, value=days-1)

import streamlit as st

#‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)

# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß
st.markdown("""<h4 style="font-family : 'Prompt', sans-serif;">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß</h4>""", unsafe_allow_html=True)
travel_styles = st.multiselect(
    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£:",
    options=["üåø ‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥",
    "‚òï ‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà",
    "‚õ©Ô∏è ‡∏ß‡∏±‡∏î",
    "üè∞ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
    "üåä ‡∏ó‡∏∞‡πÄ‡∏•",
    "‚õ∞Ô∏è ‡∏†‡∏π‡πÄ‡∏Ç‡∏≤",
    "üõçÔ∏è ‡∏ä‡πâ‡∏≠‡∏õ‡∏õ‡∏¥‡πâ‡∏á"],
    default=None,
)

#‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)

# ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì
st.markdown("""<h4 style="font-family : 'Prompt', sans-serif;">‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì</h4>""", unsafe_allow_html=True)
budget = st.number_input("‡∏£‡∏∞‡∏ö‡∏∏‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (‡∏ö‡∏≤‡∏ó):", min_value=0, step=100, value=0)

#‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
selected_provinces = get_provinces(selected_provinces)
travel_styles = get_travel_styles(travel_styles)
if st.button("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
    st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)
    if not selected_provinces:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î")
    elif not travel_styles:
        st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")
    else:
        st.markdown(
        f"""
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Prompt:wght@300;400;700&display=swap');

            html, body, [class*="st-"] {{
                font-family: 'Prompt', sans-serif;
            }}
            .box-1 {{
                border: 3px solid black; /* ‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡∏î‡∏≥ */
                padding: 15px;
                border-radius: 10px;
                background-color:rgba(240, 240, 240, 0.89);
                width: 80%;
                text-align: left;
                color : black ;
                margin : auto auto;
            }}
            .box-2 {{
                font-family: 'Prompt', sans-serif;
                border: 3px solid black; /* ‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡∏î‡∏≥ */
                padding: 15px;
                border-radius: 10px;
                background-color:rgba(240, 240, 240, 0.89);
                width: 90%;
                margin: auto auto; 
                text-align: left;
                color : black;
            }}
            .button {{
                background-color:rgb(228, 237, 224);
                padding: 10px;
                display: inline-block;
                border-radius: 5px;
                cursor: pointer;
                margin-bottom: 10px;
            }}
            .success {{
                background-color: #DFF0D8;
                padding: 10px;
                border-radius: 5px;
            }}
            .custom-heading {{
                font-family : 'Prompt', sans-serif;
                font-size : 24px;
                font-weight : bold;
                text-align : center;
            }}
            h2 {{
                font-family: 'Prompt', sans-serif;
            }}
        </style>
        
        <div class="box-1">
            <h3 style="font-family : 'Prompt', sans-serif;">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</h3>
            <div class="success">‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!</div>
            <p><b>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:</b> {selected_provinces}</p>
            <p><b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô/‡∏Ñ‡∏∑‡∏ô:</b> {days} ‡∏ß‡∏±‡∏ô {nights} ‡∏Ñ‡∏∑‡∏ô</p>
            <p><b>‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß:</b> {travel_styles}</p>
            <p><b>‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì:</b> {budget:,} ‡∏ö‡∏≤‡∏ó</p>
        </div>
        
        """, unsafe_allow_html=True)
        
        #‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô
        st.markdown("""<hr style="border: 1px solid black;">""", unsafe_allow_html=True)
        
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        st.markdown("""<h3 style="font-family : 'Prompt', sans-serif;">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ñ‡∏∑‡∏≠</h3>""", unsafe_allow_html=True)
        
        with st.spinner("Running the crew..."):
            inputs = {"topic": "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß",
                        "provinces" : selected_provinces,
                        "days" : days,
                        "nights" : nights,
                        "travel_styles": travel_styles,
                        "budget":budget
                        }
            crew = ProjectAiver2().crew()
            crew.kickoff(inputs=inputs)
        filepath = "output/report.md"
        with open(filepath, 'r', encoding='utf-8') as file:
            content = file.read()
        import re
        content_html = markdown.markdown(content)
        st.markdown(
            f' <div class="box-2">{content_html}</div> ',
            unsafe_allow_html=True
        )
